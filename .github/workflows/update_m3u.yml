# workflow名称，会显示在GitHub Actions页面
name: Update Filtered M3U Playlist

# 触发工作流的事件
on:
  # 定时触发：每小时执行一次（例如，每小时的第0分钟）
  # 你可以根据需要调整cron表达式
  schedule:
    - cron: '0 * * * *'
  # 允许手动从GitHub页面触发工作流
  workflow_dispatch:

# 定义工作流中的一个或多个作业 (jobs)
jobs:
  build:
    # 作业的名称
    name: Filter and Update M3U

    # **添加这个权限配置**
    permissions:
      contents: write # 授予写入仓库内容的权限

    # 作业运行的环境，这里使用最新版的Ubuntu Linux
    runs-on: ubuntu-latest

    # 作业执行的步骤
    steps:
      # 步骤1: 拉取仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4
        # 必须获取完整的历史记录，以便stefanzweifel/git-auto-commit-action可以正确工作
        with:
          fetch-depth: 0

      # 步骤2: 设置Python环境
      - name: Set up Python
        # 使用官方提供的Python安装action
        uses: actions/setup-python@v5
        with:
          # 指定Python版本，'3.x' 会使用最新的3.x版本
          python-version: '3.x'

      # 步骤3: 安装Python依赖库
      - name: Install dependencies
        run: |
          # 升级pip工具
          python -m pip install --upgrade pip
          pip install requests

      # 步骤4: 运行Python过滤脚本
      - name: Run M3U filtering script
        run: python filter_m3u.py

      # 步骤5: 检查并自动提交更改
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Auto update filtered_iptv.m3u"
          # 如果你的脚本可能产生其他需要提交的文件，可以不指定files，让它提交所有改动
          # files: filtered_iptv.m3u
