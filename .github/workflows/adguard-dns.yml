name: x abc dns1

on:
  schedule:
    - cron: '0 12 * * *'  # 每天 UTC 00:00 运行（对应 UTC+8 的 08:00）
  workflow_dispatch:     # 支持手动触发

permissions:
  contents: write  # 允许推送更改

jobs:
  update_lists_job:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # 确保异步功能支持
          cache: 'pip'  # 缓存 pip 依赖

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp aiodns

      # 只需修改 3=259200（秒数）即可，例如 2 天 = 172800，5 天 = 432000
      - name: Get 5-Day Cycle Key
        id: cycle
        run: |
          timestamp=$(date -u +%s)
          cycle_index=$((timestamp / 432000))
          echo "cycle=2025-3day-${cycle_index}" >> $GITHUB_OUTPUT
          
      - name: Cache Domain Cache File
        uses: actions/cache@v3
        with:
          path: domain_cache1.json
          key: ${{ runner.os }}-domain-cache-${{ steps.cycle.outputs.cycle }}
          restore-keys: |
            ${{ runner.os }}-domain-cache-
            
      # Step 5: Run the Python filtering script
      - name: Run x adguard dns
        run: python filter_script.py  # 更新为正确的脚本文件名
        timeout-minutes: 30  # 设置 30 分钟超时

      # Step 6: Upload log file as artifact
      - name: Upload Log File
        if: always()  # 即使失败也运行
        uses: actions/upload-artifact@v4
        with:
          name: filter-script-logs  # artifact 名称
          path: filter_script.log  # 日志文件路径
          retention-days: 7  # 保留 7 天，可调整
        continue-on-error: true  # 避免上传失败影响工作流

      # Step 7: Commit and push changes
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
  
          # 添加生成的文件
          git add a11.txt b11.txt a11b11.txt domain_cache1.json
          
          # 检查是否有变更
          if ! git diff --staged --quiet; then
            git commit -m "Update adguarddns lists and cache [$(date -u '+%Y-%m-%d %H:%M:%S UTC')] [run #${{ github.run_id }}]"
            git push
            echo "Changes committed and pushed."
          else
            echo "No changes to commit."
          fi
        continue-on-error: true  # 允许推送失败时继续
